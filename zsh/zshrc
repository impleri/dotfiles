export ANTIGEN_LOG=$HOME/.antigen.log

export SPACESHIP_USER_SHOW=always
export SPACESHIP_HOST_SHOW=always
export SPACESHIP_TIME_SHOW=true
export SPACESHIP_DOCKER_SHOW=false
export SPACESHIP_BATTERY_THRESHOLD=60
export SPACESHIP_KUBECTL_CONTEXT_SHOW_NAMESPACE=false
export SPACESHIP_EXIT_CODE_SHOW=true
export SPACESHIP_PROMPT_ORDER=(
  user          # Username section
  host          # Hostname section
  time          # Time stamps section
  dir           # Current directory section
  git           # Git section (git_branch + git_status)
  # package       # Package version
  node          # Node.js section
  ruby          # Ruby section
  elixir        # Elixir section
  golang        # Go section
  docker        # Docker section
  aws           # Amazon Web Services section
  kubectl       # Kubectl context section
  terraform     # Terraform workspace section
  exec_time     # Execution time
  line_sep      # Line break
  battery       # Battery level and status
  jobs          # Background jobs indicator
  exit_code     # Exit code section
  char          # Prompt character
)

source $HOME/.antidote/antidote.zsh
antidote load

# User configuration
export JAVA_HOME="/usr/lib/jvm/java-18-openjdk-amd64"
export GOPATH="${HOME}/workspace/go"
export ANDROID_HOME="${HOME}/workspace/android"
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games"
export PATH="${HOME}/.bin:$(go env GOPATH)/bin:$PATH"
export PATH="${ANDROID_HOME}/cmdline-tools/latest:${ANDROID_HOME}/emulator:${ANDROID_HOME}/platform-tools:$PATH"
export PATH="${HOME}/.yarn/bin:${HOME}/.config/yarn/global/node_modules/.bin:${HOME}/.nodejs/bin:$PATH"
export PATH="${HOME}/workspace/android-studio/bin:$PATH"
export PATH="${HOME}/.local/bin:$PATH"
export PATH="${HOME}/.gradle/gradle-7.6//bin:$PATH"
export PATH="${HOME}/.bin:$PATH"

# MacOS paths
if [ -d "/Users" ]; then
  export PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
  export PATH="$(brew --prefix)/opt/python@3.11/libexec/bin:$PATH:${HOME}/Library/Python/2.7/bin"
fi

if [ -d "/usr/local/opt/nvm" ]; then
  source /usr/local/opt/nvm/nvm.sh
fi

if command -v pyenv 1>/dev/null 2>&1; then
  export PYENV_ROOT="$HOME/.pyenv"
  export PATH="$PYENV_ROOT/bin:$PATH"
  eval "$(pyenv init --path)"
fi

export SBT_OPTS="-Xmx10G -XX:+UseParallelGC -XX:+HeapDumpOnOutOfMemoryError -Xss2M"
export JAVA_HOME="/usr/local/Cellar/openjdk@11/11.0.15"

if command -v minikube 1>/dev/null 2>&1; then
  eval $(minikube docker-env)
fi

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='nano'
else
  export EDITOR='open'
fi

if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi
# if which nodenv > /dev/null; then eval "$(nodenv init -)"; fi
